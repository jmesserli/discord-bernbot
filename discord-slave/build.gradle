buildscript {
    ext {}
    repositories {
        maven { url 'https://pkg.pegnu.cloud/repository/m2' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'nu.peg.discord'
version = projectVersion

jar {
    baseName = 'bernbot-slave'
}

sourceCompatibility = 1.8

task configurationZip(type: Zip) {
    archiveName = 'bernbot-slave-configuration.' + projectVersion + '.zip'
    from(fileTree(dir: 'src/main/resources').include('*.deploy.yml'))
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    maven { url 'https://pkg.pegnu.cloud/repository/m2' }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-activemq')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")

    compileOnly('org.springframework.boot:spring-boot-configuration-processor')
    kapt('org.springframework.boot:spring-boot-configuration-processor')

    testCompile('org.springframework.boot:spring-boot-starter-test')
}
